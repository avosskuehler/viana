<UserControl
	x:Class="VianaNET.Modules.Video.VideoWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:lex="https://github.com/XAMLMarkupExtensions/WPFLocalizationExtension"
  xmlns:control="clr-namespace:VianaNET.Modules.Video.Control"
	xmlns:blobDetection="clr-namespace:VianaNET.Modules.Video.BlobDetection" 
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:vianaNet="clr-namespace:VianaNET"
	xmlns:local="clr-namespace:VianaNET"
  xmlns:fa="clr-namespace:VianaNET.CustomStyles.FontAwesome"
	xmlns:controls="clr-namespace:VianaNET.CustomStyles.Controls"
	mc:Ignorable="d"
  lex:LocalizeDictionary.DesignCulture="de"
  d:DesignHeight="300" d:DesignWidth="400">
  <UserControl.Resources>
    <ResourceDictionary Source="/VianaNET;component/CustomStyles/Styles/VianaStyle.xaml"/>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="40"/>
    </Grid.RowDefinitions>
    <Grid Grid.Row="0" Name="ContentPanel" Background="{Binding Path=CalibrationData.GradientBackground, Source={x:Static local:App.Project}}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid Name="LeftVideoPanel" Grid.Column="0">
        <Image Name="VideoImage" 
               HorizontalAlignment="Center" 
               Source="{Binding Path=OriginalImageSource, Source={x:Static control:Video.Instance}}"/>

        <Canvas Name="OverlayCanvas" SizeChanged="OverlayCanvasSizeChanged"
                Width="{Binding ElementName=VideoImage, Path=ActualWidth}"
                Height="{Binding ElementName=VideoImage, Path=ActualHeight}">
          <Border Canvas.Left="10" Canvas.Top="10" Name="PixelLabelBorder" Background="#99FFFFFF" CornerRadius="3" Visibility="Hidden" >
            <Label Name="PixelLabel" 
                     Content="{Binding Path=CalibrationData.RulerValueInPixelUnits,
              Source={x:Static local:App.Project}}"
                 Visibility="Visible"/>
          </Border>
          <Path Name="OriginPath" Stroke="Red" StrokeThickness="1" Visibility="Hidden">
            <Path.Data>
              <GeometryGroup FillRule="EvenOdd">
                <LineGeometry StartPoint="2,5" EndPoint="8,5" />
                <LineGeometry StartPoint="5,2" EndPoint="5,8" />
                <EllipseGeometry Center="5,5" RadiusX="5" RadiusY="5"/>
              </GeometryGroup>
            </Path.Data>
          </Path>
          <Label Name="FrameRateLabel"></Label>
          <Line Name="RulerLine" X1="0" Y1="0" X2="50" Y2="50" Stroke="Aquamarine" StrokeThickness="1" Visibility="Hidden" />
          <Border Name="RulerLabelBorder" Background="#99FFFFFF" CornerRadius="3" Visibility="Hidden" >
            <StackPanel Orientation="Horizontal">
              <Label Name="RulerLabel" Padding="1" 
                   Content="{Binding Path=CalibrationData.RulerValueInRulerUnits,
              Source={x:Static local:App.Project},
              Converter={StaticResource RulerUnitStringConverter}, 
              ConverterParameter={StaticResource PositionMeasurement}}"/>
            </StackPanel>
          </Border>
          <Line Name="TopLine" Visibility="Visible" Stroke="#77FF0000" StrokeThickness="3" X1="0" X2="200" Y1="10" Y2="10" MouseEnter="TopLineMouseEnter" MouseLeave="LineMouseLeave" MouseLeftButtonDown="LineMouseLeftButtonDown" MouseMove="LineMouseMove" MouseLeftButtonUp="LineMouseLeftButtonUp" />
          <Line Name="LeftLine" Visibility="Hidden" Stroke="#77FF0000" StrokeThickness="3" X1="10" X2="10" Y1="0" Y2="100" MouseEnter="LeftLineMouseEnter" MouseLeave="LineMouseLeave" MouseLeftButtonDown="LineMouseLeftButtonDown" MouseLeftButtonUp="LineMouseLeftButtonUp" MouseMove="LineMouseMove" />
          <Line Name="BottomLine" Visibility="Hidden" Stroke="#77FF0000" StrokeThickness="3" X1="0" X2="100" Y1="100" Y2="100" MouseEnter="BottomLineMouseEnter" MouseLeave="LineMouseLeave" MouseLeftButtonDown="LineMouseLeftButtonDown" MouseLeftButtonUp="LineMouseLeftButtonUp" MouseMove="LineMouseMove" />
          <Line Name="RightLine" Visibility="Hidden" Stroke="#77FF0000" StrokeThickness="3" X1="100" X2="100" Y1="0" Y2="100" MouseEnter="RightLineMouseEnter" MouseLeave="LineMouseLeave" MouseLeftButtonDown="LineMouseLeftButtonDown" MouseLeftButtonUp="LineMouseLeftButtonUp" MouseMove="LineMouseMove" />
          <Path Name="OuterRegion" Visibility="Hidden" Fill="#88AAAAAA">
            <Path.Data>
              <CombinedGeometry GeometryCombineMode="Xor">
                <CombinedGeometry.Geometry1>
                  <RectangleGeometry Rect="0,0,100,100"/>
                </CombinedGeometry.Geometry1>
                <CombinedGeometry.Geometry2>
                  <RectangleGeometry Rect="10,10,80,80" />
                </CombinedGeometry.Geometry2>
              </CombinedGeometry>
            </Path.Data>
          </Path>
        </Canvas>
      </Grid>
      <controls:CoordinateSystem 
        Grid.Column="0" 
        x:Name="CoordinateSystem" 
        HorizontalAlignment="Left" 
        VerticalAlignment="Bottom" Width="120" Height="120"/>
      <blobDetection:BlobsControl Width="Auto" 
                          Height="Auto" 
                          Visibility="{Binding Path=ProcessingData.IsTargetColorSet, Source={x:Static local:App.Project}, Converter={StaticResource BoolVisibleConverter}}"
                          Grid.Column="1" 
                          x:Name="BlobsControl"/>
    </Grid>
    <Grid Grid.Row="1" Background="{StaticResource PropertiesBackgroundBrush}" VerticalAlignment="Bottom">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" MinWidth="100" />
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <StackPanel Grid.Column="0" Margin="10,0,10,0">
        <StackPanel Orientation="Horizontal"  >
          <Button x:Name="BtnRecord" Click="BtnRecordClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" ToolTip="{lex:Loc VianaNET:Labels:VideoWindowRecordButtonToolTip}">
            <fa:IconBlock x:Name="BtnRecordImage" Icon="Circle" FontType="Solid" FontSize="12" Foreground="Red"/>
          </Button>
          <Button x:Name="BtnPlay" Click="BtnPlayClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" ToolTip="{lex:Loc VianaNET:Labels:VideoWindowPlayButtonToolTip}">
            <fa:IconBlock x:Name="BtnPlayImage" Icon="Play" Width="11" Foreground="Green" FontType="Solid" FontSize="12" />
          </Button>
          <Button x:Name="BtnStop" Click="BtnStopClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" ToolTip="{lex:Loc VianaNET:Labels:VideoWindowStopButtonToolTip}">
            <fa:IconBlock Icon="Stop" Width="12" Foreground="SteelBlue" FontSize="12" FontType="Solid" />
          </Button>
          <Rectangle Width="8" />
          <Button x:Name="BtnSeekNext" Click="BtnSeekNextClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" ToolTip="{lex:Loc VianaNET:Labels:VideoWindowSeekNextButtonToolTip}">
            <fa:IconBlock Icon="StepForward" Width="10" Foreground="SteelBlue" FontSize="12" FontType="Solid"/>
          </Button>
          <Button x:Name="BtnSeekPrevious" Click="BtnSeekPreviousClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" ToolTip="{lex:Loc VianaNET:Labels:VideoWindowSeekPreviousButtonToolTip}">
            <fa:IconBlock Icon="StepBackward" Width="10" Foreground="SteelBlue" FontSize="12" FontType="Solid"/>
          </Button>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Name="SelectionPanel" >
          <Rectangle Width="22"/>
          <Button x:Name="BtnSetZeroTime" Click="BtnSetZeroTimeClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" ToolTip="{lex:Loc VianaNET:Labels:VideoWindowSetZeroTimeButtonToolTip}">
            <Image Source="/VianaNET;component/Images/SetZeroTime16.png" Width="16"/>
          </Button>
          <Rectangle Width="8" />
          <Button x:Name="BtnSetCutoutLeft" Click="BtnSetCutoutLeftClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" ToolTip="{lex:Loc VianaNET:Labels:VideoWindowSetCutoutLeftButtonToolTip}">
            <Image Source="/VianaNET;component/Images/SetCutoutLeft16.png" Width="16"/>
          </Button>
          <Button x:Name="BtnSetCutoutRight" Click="BtnSetCutoutRightClick" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" ToolTip="{lex:Loc VianaNET:Labels:VideoWindowSetCutoutRightButtonToolTip}">
            <Image Source="/VianaNET;component/Images/SetCutoutRight16.png" Width="16"/>
          </Button>
        </StackPanel>
      </StackPanel>
      <vianaNet:MediaSlider
        Grid.Column="1" 
        x:Name="TimelineSlider" 
        Style="{StaticResource MediaSliderStyle}"
        IsSelectionRangeEnabled="True" 
        TickDownClicked="TimelineSliderTickDownClicked"
        TickUpClicked="TimelineSliderTickUpClicked"
        FrameTimeInMS="{Binding Path=VideoElement.FrameTimeInMS, Source={x:Static control:Video.Instance}}"
        Maximum="{Binding Path=VideoPlayerElement.MediaDurationInMS, Source={x:Static control:Video.Instance}}"
        SelectionStart="{Binding Path=VideoData.SelectionStart, Source={x:Static local:App.Project}}"
        SelectionEnd="{Binding Path=VideoData.SelectionEnd, Source={x:Static local:App.Project}}"
        SmallChange="1" 
        TickPlacement="{Binding Path=VideoData.TickPlacement, Source={x:Static local:App.Project}}" 
        Interval="1" 
        Minimum="0"
        Thumb.DragCompleted="TimelineSliderDragCompleted"
        IsSnapToTickEnabled="True"/>
    </Grid>
  </Grid>
</UserControl>
